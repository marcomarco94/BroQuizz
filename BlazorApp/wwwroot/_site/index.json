{
  "README.html": {
    "href": "README.html",
    "title": "IUQuizApp | Docu",
    "keywords": "IUQuizApp"
  },
  "api/BlazorApp.Components.Account.Pages.AccessDenied.html": {
    "href": "api/BlazorApp.Components.Account.Pages.AccessDenied.html",
    "title": "Class AccessDenied | Docu",
    "keywords": "Class AccessDenied Namespace BlazorApp.Components.Account.Pages Assembly BlazorApp.dll [Layout(typeof(AccountLayout))] [Route(\"/Account/AccessDenied\")] public class AccessDenied : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Inheritance object ComponentBase AccessDenied Implements IComponent IHandleEvent IHandleAfterRender Inherited Members ComponentBase.OnInitialized() ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder"
  },
  "api/BlazorApp.Components.Account.Pages.ConfirmEmail.html": {
    "href": "api/BlazorApp.Components.Account.Pages.ConfirmEmail.html",
    "title": "Class ConfirmEmail | Docu",
    "keywords": "Class ConfirmEmail Namespace BlazorApp.Components.Account.Pages Assembly BlazorApp.dll [Layout(typeof(AccountLayout))] [Route(\"/Account/ConfirmEmail\")] public class ConfirmEmail : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Inheritance object ComponentBase ConfirmEmail Implements IComponent IHandleEvent IHandleAfterRender Inherited Members ComponentBase.OnInitialized() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder OnInitializedAsync() Method invoked when the component is ready to start, having received its initial parameters from its parent in the render tree. Override this method if you will perform an asynchronous operation and want the component to refresh when that operation is completed. protected override Task OnInitializedAsync() Returns Task A Task representing any asynchronous operation."
  },
  "api/BlazorApp.Components.Account.Pages.ConfirmEmailChange.html": {
    "href": "api/BlazorApp.Components.Account.Pages.ConfirmEmailChange.html",
    "title": "Class ConfirmEmailChange | Docu",
    "keywords": "Class ConfirmEmailChange Namespace BlazorApp.Components.Account.Pages Assembly BlazorApp.dll [Layout(typeof(AccountLayout))] [Route(\"/Account/ConfirmEmailChange\")] public class ConfirmEmailChange : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Inheritance object ComponentBase ConfirmEmailChange Implements IComponent IHandleEvent IHandleAfterRender Inherited Members ComponentBase.OnInitialized() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder OnInitializedAsync() Method invoked when the component is ready to start, having received its initial parameters from its parent in the render tree. Override this method if you will perform an asynchronous operation and want the component to refresh when that operation is completed. protected override Task OnInitializedAsync() Returns Task A Task representing any asynchronous operation."
  },
  "api/BlazorApp.Components.Account.Pages.ExternalLogin.html": {
    "href": "api/BlazorApp.Components.Account.Pages.ExternalLogin.html",
    "title": "Class ExternalLogin | Docu",
    "keywords": "Class ExternalLogin Namespace BlazorApp.Components.Account.Pages Assembly BlazorApp.dll [Layout(typeof(AccountLayout))] [Route(\"/Account/ExternalLogin\")] public class ExternalLogin : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Inheritance object ComponentBase ExternalLogin Implements IComponent IHandleEvent IHandleAfterRender Inherited Members ComponentBase.OnInitialized() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields LoginCallbackAction public const string LoginCallbackAction = \"LoginCallback\" Field Value string Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder OnInitializedAsync() Method invoked when the component is ready to start, having received its initial parameters from its parent in the render tree. Override this method if you will perform an asynchronous operation and want the component to refresh when that operation is completed. protected override Task OnInitializedAsync() Returns Task A Task representing any asynchronous operation."
  },
  "api/BlazorApp.Components.Account.Pages.ForgotPassword.html": {
    "href": "api/BlazorApp.Components.Account.Pages.ForgotPassword.html",
    "title": "Class ForgotPassword | Docu",
    "keywords": "Class ForgotPassword Namespace BlazorApp.Components.Account.Pages Assembly BlazorApp.dll [Layout(typeof(AccountLayout))] [Route(\"/Account/ForgotPassword\")] public class ForgotPassword : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Inheritance object ComponentBase ForgotPassword Implements IComponent IHandleEvent IHandleAfterRender Inherited Members ComponentBase.OnInitialized() ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder"
  },
  "api/BlazorApp.Components.Account.Pages.ForgotPasswordConfirmation.html": {
    "href": "api/BlazorApp.Components.Account.Pages.ForgotPasswordConfirmation.html",
    "title": "Class ForgotPasswordConfirmation | Docu",
    "keywords": "Class ForgotPasswordConfirmation Namespace BlazorApp.Components.Account.Pages Assembly BlazorApp.dll [Layout(typeof(AccountLayout))] [Route(\"/Account/ForgotPasswordConfirmation\")] public class ForgotPasswordConfirmation : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Inheritance object ComponentBase ForgotPasswordConfirmation Implements IComponent IHandleEvent IHandleAfterRender Inherited Members ComponentBase.OnInitialized() ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder"
  },
  "api/BlazorApp.Components.Account.Pages.InvalidPasswordReset.html": {
    "href": "api/BlazorApp.Components.Account.Pages.InvalidPasswordReset.html",
    "title": "Class InvalidPasswordReset | Docu",
    "keywords": "Class InvalidPasswordReset Namespace BlazorApp.Components.Account.Pages Assembly BlazorApp.dll [Layout(typeof(AccountLayout))] [Route(\"/Account/InvalidPasswordReset\")] public class InvalidPasswordReset : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Inheritance object ComponentBase InvalidPasswordReset Implements IComponent IHandleEvent IHandleAfterRender Inherited Members ComponentBase.OnInitialized() ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder"
  },
  "api/BlazorApp.Components.Account.Pages.InvalidUser.html": {
    "href": "api/BlazorApp.Components.Account.Pages.InvalidUser.html",
    "title": "Class InvalidUser | Docu",
    "keywords": "Class InvalidUser Namespace BlazorApp.Components.Account.Pages Assembly BlazorApp.dll [Layout(typeof(AccountLayout))] [Route(\"/Account/InvalidUser\")] public class InvalidUser : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Inheritance object ComponentBase InvalidUser Implements IComponent IHandleEvent IHandleAfterRender Inherited Members ComponentBase.OnInitialized() ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder"
  },
  "api/BlazorApp.Components.Account.Pages.Lockout.html": {
    "href": "api/BlazorApp.Components.Account.Pages.Lockout.html",
    "title": "Class Lockout | Docu",
    "keywords": "Class Lockout Namespace BlazorApp.Components.Account.Pages Assembly BlazorApp.dll [Layout(typeof(AccountLayout))] [Route(\"/Account/Lockout\")] public class Lockout : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Inheritance object ComponentBase Lockout Implements IComponent IHandleEvent IHandleAfterRender Inherited Members ComponentBase.OnInitialized() ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder"
  },
  "api/BlazorApp.Components.Account.Pages.Login.html": {
    "href": "api/BlazorApp.Components.Account.Pages.Login.html",
    "title": "Class Login | Docu",
    "keywords": "Class Login Namespace BlazorApp.Components.Account.Pages Assembly BlazorApp.dll [Layout(typeof(AccountLayout))] [Route(\"/Account/Login\")] public class Login : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Inheritance object ComponentBase Login Implements IComponent IHandleEvent IHandleAfterRender Inherited Members ComponentBase.OnInitialized() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder LoginUser() public Task LoginUser() Returns Task OnInitializedAsync() Method invoked when the component is ready to start, having received its initial parameters from its parent in the render tree. Override this method if you will perform an asynchronous operation and want the component to refresh when that operation is completed. protected override Task OnInitializedAsync() Returns Task A Task representing any asynchronous operation."
  },
  "api/BlazorApp.Components.Account.Pages.LoginWith2fa.html": {
    "href": "api/BlazorApp.Components.Account.Pages.LoginWith2fa.html",
    "title": "Class LoginWith2fa | Docu",
    "keywords": "Class LoginWith2fa Namespace BlazorApp.Components.Account.Pages Assembly BlazorApp.dll [Layout(typeof(AccountLayout))] [Route(\"/Account/LoginWith2fa\")] public class LoginWith2fa : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Inheritance object ComponentBase LoginWith2fa Implements IComponent IHandleEvent IHandleAfterRender Inherited Members ComponentBase.OnInitialized() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder OnInitializedAsync() Method invoked when the component is ready to start, having received its initial parameters from its parent in the render tree. Override this method if you will perform an asynchronous operation and want the component to refresh when that operation is completed. protected override Task OnInitializedAsync() Returns Task A Task representing any asynchronous operation."
  },
  "api/BlazorApp.Components.Account.Pages.LoginWithRecoveryCode.html": {
    "href": "api/BlazorApp.Components.Account.Pages.LoginWithRecoveryCode.html",
    "title": "Class LoginWithRecoveryCode | Docu",
    "keywords": "Class LoginWithRecoveryCode Namespace BlazorApp.Components.Account.Pages Assembly BlazorApp.dll [Layout(typeof(AccountLayout))] [Route(\"/Account/LoginWithRecoveryCode\")] public class LoginWithRecoveryCode : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Inheritance object ComponentBase LoginWithRecoveryCode Implements IComponent IHandleEvent IHandleAfterRender Inherited Members ComponentBase.OnInitialized() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder OnInitializedAsync() Method invoked when the component is ready to start, having received its initial parameters from its parent in the render tree. Override this method if you will perform an asynchronous operation and want the component to refresh when that operation is completed. protected override Task OnInitializedAsync() Returns Task A Task representing any asynchronous operation."
  },
  "api/BlazorApp.Components.Account.Pages.Manage.ChangePassword.html": {
    "href": "api/BlazorApp.Components.Account.Pages.Manage.ChangePassword.html",
    "title": "Class ChangePassword | Docu",
    "keywords": "Class ChangePassword Namespace BlazorApp.Components.Account.Pages.Manage Assembly BlazorApp.dll [Authorize] [Layout(typeof(ManageLayout))] [Route(\"/Account/Manage/ChangePassword\")] public class ChangePassword : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Inheritance object ComponentBase ChangePassword Implements IComponent IHandleEvent IHandleAfterRender Inherited Members ComponentBase.OnInitialized() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder OnInitializedAsync() Method invoked when the component is ready to start, having received its initial parameters from its parent in the render tree. Override this method if you will perform an asynchronous operation and want the component to refresh when that operation is completed. protected override Task OnInitializedAsync() Returns Task A Task representing any asynchronous operation."
  },
  "api/BlazorApp.Components.Account.Pages.Manage.DeletePersonalData.html": {
    "href": "api/BlazorApp.Components.Account.Pages.Manage.DeletePersonalData.html",
    "title": "Class DeletePersonalData | Docu",
    "keywords": "Class DeletePersonalData Namespace BlazorApp.Components.Account.Pages.Manage Assembly BlazorApp.dll [Authorize] [Layout(typeof(ManageLayout))] [Route(\"/Account/Manage/DeletePersonalData\")] public class DeletePersonalData : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Inheritance object ComponentBase DeletePersonalData Implements IComponent IHandleEvent IHandleAfterRender Inherited Members ComponentBase.OnInitialized() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder OnInitializedAsync() Method invoked when the component is ready to start, having received its initial parameters from its parent in the render tree. Override this method if you will perform an asynchronous operation and want the component to refresh when that operation is completed. protected override Task OnInitializedAsync() Returns Task A Task representing any asynchronous operation."
  },
  "api/BlazorApp.Components.Account.Pages.Manage.Disable2fa.html": {
    "href": "api/BlazorApp.Components.Account.Pages.Manage.Disable2fa.html",
    "title": "Class Disable2fa | Docu",
    "keywords": "Class Disable2fa Namespace BlazorApp.Components.Account.Pages.Manage Assembly BlazorApp.dll [Authorize] [Layout(typeof(ManageLayout))] [Route(\"/Account/Manage/Disable2fa\")] public class Disable2fa : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Inheritance object ComponentBase Disable2fa Implements IComponent IHandleEvent IHandleAfterRender Inherited Members ComponentBase.OnInitialized() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder OnInitializedAsync() Method invoked when the component is ready to start, having received its initial parameters from its parent in the render tree. Override this method if you will perform an asynchronous operation and want the component to refresh when that operation is completed. protected override Task OnInitializedAsync() Returns Task A Task representing any asynchronous operation."
  },
  "api/BlazorApp.Components.Account.Pages.Manage.Email.html": {
    "href": "api/BlazorApp.Components.Account.Pages.Manage.Email.html",
    "title": "Class Email | Docu",
    "keywords": "Class Email Namespace BlazorApp.Components.Account.Pages.Manage Assembly BlazorApp.dll [Authorize] [Layout(typeof(ManageLayout))] [Route(\"/Account/Manage/Email\")] public class Email : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Inheritance object ComponentBase Email Implements IComponent IHandleEvent IHandleAfterRender Inherited Members ComponentBase.OnInitialized() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder OnInitializedAsync() Method invoked when the component is ready to start, having received its initial parameters from its parent in the render tree. Override this method if you will perform an asynchronous operation and want the component to refresh when that operation is completed. protected override Task OnInitializedAsync() Returns Task A Task representing any asynchronous operation."
  },
  "api/BlazorApp.Components.Account.Pages.Manage.EnableAuthenticator.html": {
    "href": "api/BlazorApp.Components.Account.Pages.Manage.EnableAuthenticator.html",
    "title": "Class EnableAuthenticator | Docu",
    "keywords": "Class EnableAuthenticator Namespace BlazorApp.Components.Account.Pages.Manage Assembly BlazorApp.dll [Authorize] [Layout(typeof(ManageLayout))] [Route(\"/Account/Manage/EnableAuthenticator\")] public class EnableAuthenticator : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Inheritance object ComponentBase EnableAuthenticator Implements IComponent IHandleEvent IHandleAfterRender Inherited Members ComponentBase.OnInitialized() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder OnInitializedAsync() Method invoked when the component is ready to start, having received its initial parameters from its parent in the render tree. Override this method if you will perform an asynchronous operation and want the component to refresh when that operation is completed. protected override Task OnInitializedAsync() Returns Task A Task representing any asynchronous operation."
  },
  "api/BlazorApp.Components.Account.Pages.Manage.ExternalLogins.html": {
    "href": "api/BlazorApp.Components.Account.Pages.Manage.ExternalLogins.html",
    "title": "Class ExternalLogins | Docu",
    "keywords": "Class ExternalLogins Namespace BlazorApp.Components.Account.Pages.Manage Assembly BlazorApp.dll [Authorize] [Layout(typeof(ManageLayout))] [Route(\"/Account/Manage/ExternalLogins\")] public class ExternalLogins : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Inheritance object ComponentBase ExternalLogins Implements IComponent IHandleEvent IHandleAfterRender Inherited Members ComponentBase.OnInitialized() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields LinkLoginCallbackAction public const string LinkLoginCallbackAction = \"LinkLoginCallback\" Field Value string Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder OnInitializedAsync() Method invoked when the component is ready to start, having received its initial parameters from its parent in the render tree. Override this method if you will perform an asynchronous operation and want the component to refresh when that operation is completed. protected override Task OnInitializedAsync() Returns Task A Task representing any asynchronous operation."
  },
  "api/BlazorApp.Components.Account.Pages.Manage.GenerateRecoveryCodes.html": {
    "href": "api/BlazorApp.Components.Account.Pages.Manage.GenerateRecoveryCodes.html",
    "title": "Class GenerateRecoveryCodes | Docu",
    "keywords": "Class GenerateRecoveryCodes Namespace BlazorApp.Components.Account.Pages.Manage Assembly BlazorApp.dll [Authorize] [Layout(typeof(ManageLayout))] [Route(\"/Account/Manage/GenerateRecoveryCodes\")] public class GenerateRecoveryCodes : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Inheritance object ComponentBase GenerateRecoveryCodes Implements IComponent IHandleEvent IHandleAfterRender Inherited Members ComponentBase.OnInitialized() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder OnInitializedAsync() Method invoked when the component is ready to start, having received its initial parameters from its parent in the render tree. Override this method if you will perform an asynchronous operation and want the component to refresh when that operation is completed. protected override Task OnInitializedAsync() Returns Task A Task representing any asynchronous operation."
  },
  "api/BlazorApp.Components.Account.Pages.Manage.Index.html": {
    "href": "api/BlazorApp.Components.Account.Pages.Manage.Index.html",
    "title": "Class Index | Docu",
    "keywords": "Class Index Namespace BlazorApp.Components.Account.Pages.Manage Assembly BlazorApp.dll [Authorize] [Layout(typeof(ManageLayout))] [Route(\"/Account/Manage\")] public class Index : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Inheritance object ComponentBase Index Implements IComponent IHandleEvent IHandleAfterRender Inherited Members ComponentBase.OnInitialized() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder OnInitializedAsync() Method invoked when the component is ready to start, having received its initial parameters from its parent in the render tree. Override this method if you will perform an asynchronous operation and want the component to refresh when that operation is completed. protected override Task OnInitializedAsync() Returns Task A Task representing any asynchronous operation."
  },
  "api/BlazorApp.Components.Account.Pages.Manage.PersonalData.html": {
    "href": "api/BlazorApp.Components.Account.Pages.Manage.PersonalData.html",
    "title": "Class PersonalData | Docu",
    "keywords": "Class PersonalData Namespace BlazorApp.Components.Account.Pages.Manage Assembly BlazorApp.dll [Authorize] [Layout(typeof(ManageLayout))] [Route(\"/Account/Manage/PersonalData\")] public class PersonalData : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Inheritance object ComponentBase PersonalData Implements IComponent IHandleEvent IHandleAfterRender Inherited Members ComponentBase.OnInitialized() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder OnInitializedAsync() Method invoked when the component is ready to start, having received its initial parameters from its parent in the render tree. Override this method if you will perform an asynchronous operation and want the component to refresh when that operation is completed. protected override Task OnInitializedAsync() Returns Task A Task representing any asynchronous operation."
  },
  "api/BlazorApp.Components.Account.Pages.Manage.ResetAuthenticator.html": {
    "href": "api/BlazorApp.Components.Account.Pages.Manage.ResetAuthenticator.html",
    "title": "Class ResetAuthenticator | Docu",
    "keywords": "Class ResetAuthenticator Namespace BlazorApp.Components.Account.Pages.Manage Assembly BlazorApp.dll [Authorize] [Layout(typeof(ManageLayout))] [Route(\"/Account/Manage/ResetAuthenticator\")] public class ResetAuthenticator : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Inheritance object ComponentBase ResetAuthenticator Implements IComponent IHandleEvent IHandleAfterRender Inherited Members ComponentBase.OnInitialized() ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder"
  },
  "api/BlazorApp.Components.Account.Pages.Manage.SetPassword.html": {
    "href": "api/BlazorApp.Components.Account.Pages.Manage.SetPassword.html",
    "title": "Class SetPassword | Docu",
    "keywords": "Class SetPassword Namespace BlazorApp.Components.Account.Pages.Manage Assembly BlazorApp.dll [Authorize] [Layout(typeof(ManageLayout))] [Route(\"/Account/Manage/SetPassword\")] public class SetPassword : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Inheritance object ComponentBase SetPassword Implements IComponent IHandleEvent IHandleAfterRender Inherited Members ComponentBase.OnInitialized() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder OnInitializedAsync() Method invoked when the component is ready to start, having received its initial parameters from its parent in the render tree. Override this method if you will perform an asynchronous operation and want the component to refresh when that operation is completed. protected override Task OnInitializedAsync() Returns Task A Task representing any asynchronous operation."
  },
  "api/BlazorApp.Components.Account.Pages.Manage.TwoFactorAuthentication.html": {
    "href": "api/BlazorApp.Components.Account.Pages.Manage.TwoFactorAuthentication.html",
    "title": "Class TwoFactorAuthentication | Docu",
    "keywords": "Class TwoFactorAuthentication Namespace BlazorApp.Components.Account.Pages.Manage Assembly BlazorApp.dll [Authorize] [Layout(typeof(ManageLayout))] [Route(\"/Account/Manage/TwoFactorAuthentication\")] public class TwoFactorAuthentication : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Inheritance object ComponentBase TwoFactorAuthentication Implements IComponent IHandleEvent IHandleAfterRender Inherited Members ComponentBase.OnInitialized() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder OnInitializedAsync() Method invoked when the component is ready to start, having received its initial parameters from its parent in the render tree. Override this method if you will perform an asynchronous operation and want the component to refresh when that operation is completed. protected override Task OnInitializedAsync() Returns Task A Task representing any asynchronous operation."
  },
  "api/BlazorApp.Components.Account.Pages.Manage._Imports.html": {
    "href": "api/BlazorApp.Components.Account.Pages.Manage._Imports.html",
    "title": "Class _Imports | Docu",
    "keywords": "Class _Imports Namespace BlazorApp.Components.Account.Pages.Manage Assembly BlazorApp.dll [Authorize] [Layout(typeof(ManageLayout))] public class _Imports : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Inheritance object ComponentBase _Imports Implements IComponent IHandleEvent IHandleAfterRender Inherited Members ComponentBase.OnInitialized() ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder"
  },
  "api/BlazorApp.Components.Account.Pages.Manage.html": {
    "href": "api/BlazorApp.Components.Account.Pages.Manage.html",
    "title": "Namespace BlazorApp.Components.Account.Pages.Manage | Docu",
    "keywords": "Namespace BlazorApp.Components.Account.Pages.Manage Classes ChangePassword DeletePersonalData Disable2fa Email EnableAuthenticator ExternalLogins GenerateRecoveryCodes Index PersonalData ResetAuthenticator SetPassword TwoFactorAuthentication _Imports"
  },
  "api/BlazorApp.Components.Account.Pages.Register.html": {
    "href": "api/BlazorApp.Components.Account.Pages.Register.html",
    "title": "Class Register | Docu",
    "keywords": "Class Register Namespace BlazorApp.Components.Account.Pages Assembly BlazorApp.dll [Layout(typeof(AccountLayout))] [Route(\"/Account/Register\")] public class Register : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Inheritance object ComponentBase Register Implements IComponent IHandleEvent IHandleAfterRender Inherited Members ComponentBase.OnInitialized() ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder RegisterUser(EditContext) public Task RegisterUser(EditContext editContext) Parameters editContext EditContext Returns Task"
  },
  "api/BlazorApp.Components.Account.Pages.RegisterConfirmation.html": {
    "href": "api/BlazorApp.Components.Account.Pages.RegisterConfirmation.html",
    "title": "Class RegisterConfirmation | Docu",
    "keywords": "Class RegisterConfirmation Namespace BlazorApp.Components.Account.Pages Assembly BlazorApp.dll [Layout(typeof(AccountLayout))] [Route(\"/Account/RegisterConfirmation\")] public class RegisterConfirmation : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Inheritance object ComponentBase RegisterConfirmation Implements IComponent IHandleEvent IHandleAfterRender Inherited Members ComponentBase.OnInitialized() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder OnInitializedAsync() Method invoked when the component is ready to start, having received its initial parameters from its parent in the render tree. Override this method if you will perform an asynchronous operation and want the component to refresh when that operation is completed. protected override Task OnInitializedAsync() Returns Task A Task representing any asynchronous operation."
  },
  "api/BlazorApp.Components.Account.Pages.ResendEmailConfirmation.html": {
    "href": "api/BlazorApp.Components.Account.Pages.ResendEmailConfirmation.html",
    "title": "Class ResendEmailConfirmation | Docu",
    "keywords": "Class ResendEmailConfirmation Namespace BlazorApp.Components.Account.Pages Assembly BlazorApp.dll [Layout(typeof(AccountLayout))] [Route(\"/Account/ResendEmailConfirmation\")] public class ResendEmailConfirmation : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Inheritance object ComponentBase ResendEmailConfirmation Implements IComponent IHandleEvent IHandleAfterRender Inherited Members ComponentBase.OnInitialized() ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder"
  },
  "api/BlazorApp.Components.Account.Pages.ResetPassword.html": {
    "href": "api/BlazorApp.Components.Account.Pages.ResetPassword.html",
    "title": "Class ResetPassword | Docu",
    "keywords": "Class ResetPassword Namespace BlazorApp.Components.Account.Pages Assembly BlazorApp.dll [Layout(typeof(AccountLayout))] [Route(\"/Account/ResetPassword\")] public class ResetPassword : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Inheritance object ComponentBase ResetPassword Implements IComponent IHandleEvent IHandleAfterRender Inherited Members ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder OnInitialized() Method invoked when the component is ready to start, having received its initial parameters from its parent in the render tree. protected override void OnInitialized()"
  },
  "api/BlazorApp.Components.Account.Pages.ResetPasswordConfirmation.html": {
    "href": "api/BlazorApp.Components.Account.Pages.ResetPasswordConfirmation.html",
    "title": "Class ResetPasswordConfirmation | Docu",
    "keywords": "Class ResetPasswordConfirmation Namespace BlazorApp.Components.Account.Pages Assembly BlazorApp.dll [Layout(typeof(AccountLayout))] [Route(\"/Account/ResetPasswordConfirmation\")] public class ResetPasswordConfirmation : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Inheritance object ComponentBase ResetPasswordConfirmation Implements IComponent IHandleEvent IHandleAfterRender Inherited Members ComponentBase.OnInitialized() ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder"
  },
  "api/BlazorApp.Components.Account.Pages._Imports.html": {
    "href": "api/BlazorApp.Components.Account.Pages._Imports.html",
    "title": "Class _Imports | Docu",
    "keywords": "Class _Imports Namespace BlazorApp.Components.Account.Pages Assembly BlazorApp.dll [Layout(typeof(AccountLayout))] public class _Imports : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Inheritance object ComponentBase _Imports Implements IComponent IHandleEvent IHandleAfterRender Inherited Members ComponentBase.OnInitialized() ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder"
  },
  "api/BlazorApp.Components.Account.Pages.html": {
    "href": "api/BlazorApp.Components.Account.Pages.html",
    "title": "Namespace BlazorApp.Components.Account.Pages | Docu",
    "keywords": "Namespace BlazorApp.Components.Account.Pages Classes AccessDenied ConfirmEmail ConfirmEmailChange ExternalLogin ForgotPassword ForgotPasswordConfirmation InvalidPasswordReset InvalidUser Lockout Login LoginWith2fa LoginWithRecoveryCode Register RegisterConfirmation ResendEmailConfirmation ResetPassword ResetPasswordConfirmation _Imports"
  },
  "api/BlazorApp.Components.Account.Shared.AccountLayout.html": {
    "href": "api/BlazorApp.Components.Account.Shared.AccountLayout.html",
    "title": "Class AccountLayout | Docu",
    "keywords": "Class AccountLayout Namespace BlazorApp.Components.Account.Shared Assembly BlazorApp.dll [Layout(typeof(MainLayout))] public class AccountLayout : LayoutComponentBase, IComponent, IHandleEvent, IHandleAfterRender Inheritance object ComponentBase LayoutComponentBase AccountLayout Implements IComponent IHandleEvent IHandleAfterRender Inherited Members LayoutComponentBase.SetParametersAsync(ParameterView) LayoutComponentBase.Body ComponentBase.OnInitialized() ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder OnParametersSet() Method invoked when the component has received parameters from its parent in the render tree, and the incoming values have been assigned to properties. protected override void OnParametersSet()"
  },
  "api/BlazorApp.Components.Account.Shared.ExternalLoginPicker.html": {
    "href": "api/BlazorApp.Components.Account.Shared.ExternalLoginPicker.html",
    "title": "Class ExternalLoginPicker | Docu",
    "keywords": "Class ExternalLoginPicker Namespace BlazorApp.Components.Account.Shared Assembly BlazorApp.dll public class ExternalLoginPicker : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Inheritance object ComponentBase ExternalLoginPicker Implements IComponent IHandleEvent IHandleAfterRender Inherited Members ComponentBase.OnInitialized() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder OnInitializedAsync() Method invoked when the component is ready to start, having received its initial parameters from its parent in the render tree. Override this method if you will perform an asynchronous operation and want the component to refresh when that operation is completed. protected override Task OnInitializedAsync() Returns Task A Task representing any asynchronous operation."
  },
  "api/BlazorApp.Components.Account.Shared.ManageLayout.html": {
    "href": "api/BlazorApp.Components.Account.Shared.ManageLayout.html",
    "title": "Class ManageLayout | Docu",
    "keywords": "Class ManageLayout Namespace BlazorApp.Components.Account.Shared Assembly BlazorApp.dll [Layout(typeof(AccountLayout))] public class ManageLayout : LayoutComponentBase, IComponent, IHandleEvent, IHandleAfterRender Inheritance object ComponentBase LayoutComponentBase ManageLayout Implements IComponent IHandleEvent IHandleAfterRender Inherited Members LayoutComponentBase.SetParametersAsync(ParameterView) LayoutComponentBase.Body ComponentBase.OnInitialized() ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder"
  },
  "api/BlazorApp.Components.Account.Shared.ManageNavMenu.html": {
    "href": "api/BlazorApp.Components.Account.Shared.ManageNavMenu.html",
    "title": "Class ManageNavMenu | Docu",
    "keywords": "Class ManageNavMenu Namespace BlazorApp.Components.Account.Shared Assembly BlazorApp.dll public class ManageNavMenu : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Inheritance object ComponentBase ManageNavMenu Implements IComponent IHandleEvent IHandleAfterRender Inherited Members ComponentBase.OnInitialized() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder OnInitializedAsync() Method invoked when the component is ready to start, having received its initial parameters from its parent in the render tree. Override this method if you will perform an asynchronous operation and want the component to refresh when that operation is completed. protected override Task OnInitializedAsync() Returns Task A Task representing any asynchronous operation."
  },
  "api/BlazorApp.Components.Account.Shared.RedirectToLogin.html": {
    "href": "api/BlazorApp.Components.Account.Shared.RedirectToLogin.html",
    "title": "Class RedirectToLogin | Docu",
    "keywords": "Class RedirectToLogin Namespace BlazorApp.Components.Account.Shared Assembly BlazorApp.dll public class RedirectToLogin : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Inheritance object ComponentBase RedirectToLogin Implements IComponent IHandleEvent IHandleAfterRender Inherited Members ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder OnInitialized() Method invoked when the component is ready to start, having received its initial parameters from its parent in the render tree. protected override void OnInitialized()"
  },
  "api/BlazorApp.Components.Account.Shared.ShowRecoveryCodes.html": {
    "href": "api/BlazorApp.Components.Account.Shared.ShowRecoveryCodes.html",
    "title": "Class ShowRecoveryCodes | Docu",
    "keywords": "Class ShowRecoveryCodes Namespace BlazorApp.Components.Account.Shared Assembly BlazorApp.dll public class ShowRecoveryCodes : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Inheritance object ComponentBase ShowRecoveryCodes Implements IComponent IHandleEvent IHandleAfterRender Inherited Members ComponentBase.OnInitialized() ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties RecoveryCodes [Parameter] public string[] RecoveryCodes { get; set; } Property Value string[] StatusMessage [Parameter] public string? StatusMessage { get; set; } Property Value string Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder"
  },
  "api/BlazorApp.Components.Account.Shared.StatusMessage.html": {
    "href": "api/BlazorApp.Components.Account.Shared.StatusMessage.html",
    "title": "Class StatusMessage | Docu",
    "keywords": "Class StatusMessage Namespace BlazorApp.Components.Account.Shared Assembly BlazorApp.dll public class StatusMessage : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Inheritance object ComponentBase StatusMessage Implements IComponent IHandleEvent IHandleAfterRender Inherited Members ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Message [Parameter] public string? Message { get; set; } Property Value string Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder OnInitialized() Method invoked when the component is ready to start, having received its initial parameters from its parent in the render tree. protected override void OnInitialized()"
  },
  "api/BlazorApp.Components.Account.Shared.html": {
    "href": "api/BlazorApp.Components.Account.Shared.html",
    "title": "Namespace BlazorApp.Components.Account.Shared | Docu",
    "keywords": "Namespace BlazorApp.Components.Account.Shared Classes AccountLayout ExternalLoginPicker ManageLayout ManageNavMenu RedirectToLogin ShowRecoveryCodes StatusMessage"
  },
  "api/BlazorApp.Components.App.html": {
    "href": "api/BlazorApp.Components.App.html",
    "title": "Class App | Docu",
    "keywords": "Class App Namespace BlazorApp.Components Assembly BlazorApp.dll public class App : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Inheritance object ComponentBase App Implements IComponent IHandleEvent IHandleAfterRender Inherited Members ComponentBase.OnInitialized() ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder"
  },
  "api/BlazorApp.Components.HelperComps.DeleteDialog.html": {
    "href": "api/BlazorApp.Components.HelperComps.DeleteDialog.html",
    "title": "Class DeleteDialog | Docu",
    "keywords": "Class DeleteDialog Namespace BlazorApp.Components.HelperComps Assembly BlazorApp.dll public class DeleteDialog : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender, IDialogContentComponent<string>, IDialogContentComponent Inheritance object ComponentBase DeleteDialog Implements IComponent IHandleEvent IHandleAfterRender IDialogContentComponent<string> IDialogContentComponent Inherited Members ComponentBase.OnInitialized() ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Content [Parameter] public string Content { get; set; } Property Value string Dialog [CascadingParameter] public FluentDialog? Dialog { get; set; } Property Value FluentDialog Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder"
  },
  "api/BlazorApp.Components.HelperComps.EditDialog.html": {
    "href": "api/BlazorApp.Components.HelperComps.EditDialog.html",
    "title": "Class EditDialog | Docu",
    "keywords": "Class EditDialog Namespace BlazorApp.Components.HelperComps Assembly BlazorApp.dll public class EditDialog : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender, IDialogContentComponent<string>, IDialogContentComponent Inheritance object ComponentBase EditDialog Implements IComponent IHandleEvent IHandleAfterRender IDialogContentComponent<string> IDialogContentComponent Inherited Members ComponentBase.OnInitialized() ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Content [Parameter] public string Content { get; set; } Property Value string Dialog [CascadingParameter] public FluentDialog? Dialog { get; set; } Property Value FluentDialog Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder"
  },
  "api/BlazorApp.Components.HelperComps.GameTopicArea.html": {
    "href": "api/BlazorApp.Components.HelperComps.GameTopicArea.html",
    "title": "Class GameTopicArea | Docu",
    "keywords": "Class GameTopicArea Namespace BlazorApp.Components.HelperComps Assembly BlazorApp.dll public class GameTopicArea : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender, IAsyncDisposable Inheritance object ComponentBase GameTopicArea Implements IComponent IHandleEvent IHandleAfterRender IAsyncDisposable Inherited Members ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSet() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ConnectedUsers [Parameter] public List<PlayerModel>? ConnectedUsers { get; set; } Property Value List<PlayerModel> SelectedTopic [Parameter] public TopicModel? SelectedTopic { get; set; } Property Value TopicModel SelectedTopicChanged [Parameter] public EventCallback<TopicModel> SelectedTopicChanged { get; set; } Property Value EventCallback<TopicModel> Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder DisposeAsync() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources asynchronously. public ValueTask DisposeAsync() Returns ValueTask A task that represents the asynchronous dispose operation. OnInitialized() Method invoked when the component is ready to start, having received its initial parameters from its parent in the render tree. protected override void OnInitialized() OnParametersSetAsync() Method invoked when the component has received parameters from its parent in the render tree, and the incoming values have been assigned to properties. protected override Task OnParametersSetAsync() Returns Task A Task representing any asynchronous operation."
  },
  "api/BlazorApp.Components.HelperComps.GamingArea.html": {
    "href": "api/BlazorApp.Components.HelperComps.GamingArea.html",
    "title": "Class GamingArea | Docu",
    "keywords": "Class GamingArea Namespace BlazorApp.Components.HelperComps Assembly BlazorApp.dll public class GamingArea : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender, IAsyncDisposable Inheritance object ComponentBase GamingArea Implements IComponent IHandleEvent IHandleAfterRender IAsyncDisposable Inherited Members ComponentBase.OnInitialized() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ConnectedUsers [Parameter] public List<PlayerModel>? ConnectedUsers { get; set; } Property Value List<PlayerModel> Topic [Parameter] public TopicModel? Topic { get; set; } Property Value TopicModel Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder DisposeAsync() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources asynchronously. public ValueTask DisposeAsync() Returns ValueTask A task that represents the asynchronous dispose operation. OnConnectionChanged(HubConnectionState, HubConnectionState) protected virtual void OnConnectionChanged(HubConnectionState oldState, HubConnectionState newState) Parameters oldState HubConnectionState newState HubConnectionState OnInitializedAsync() Method invoked when the component is ready to start, having received its initial parameters from its parent in the render tree. Override this method if you will perform an asynchronous operation and want the component to refresh when that operation is completed. protected override Task OnInitializedAsync() Returns Task A Task representing any asynchronous operation."
  },
  "api/BlazorApp.Components.HelperComps.OnlineArea.NewMessage.html": {
    "href": "api/BlazorApp.Components.HelperComps.OnlineArea.NewMessage.html",
    "title": "Class OnlineArea.NewMessage | Docu",
    "keywords": "Class OnlineArea.NewMessage Namespace BlazorApp.Components.HelperComps Assembly BlazorApp.dll public class OnlineArea.NewMessage Inheritance object OnlineArea.NewMessage Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Text public string? Text { get; set; } Property Value string"
  },
  "api/BlazorApp.Components.HelperComps.OnlineArea.html": {
    "href": "api/BlazorApp.Components.HelperComps.OnlineArea.html",
    "title": "Class OnlineArea | Docu",
    "keywords": "Class OnlineArea Namespace BlazorApp.Components.HelperComps Assembly BlazorApp.dll public class OnlineArea : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Inheritance object ComponentBase OnlineArea Implements IComponent IHandleEvent IHandleAfterRender Inherited Members ComponentBase.OnInitialized() ComponentBase.OnParametersSet() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ConnectedUsers [Parameter] public List<PlayerModel>? ConnectedUsers { get; set; } Property Value List<PlayerModel> ConnectedUsersChanged [Parameter] public EventCallback<List<PlayerModel>> ConnectedUsersChanged { get; set; } Property Value EventCallback<List<PlayerModel>> ParentTopic [Parameter] public TopicModel? ParentTopic { get; set; } Property Value TopicModel Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder Connect() public Task Connect() Returns Task OnInitializedAsync() Method invoked when the component is ready to start, having received its initial parameters from its parent in the render tree. Override this method if you will perform an asynchronous operation and want the component to refresh when that operation is completed. protected override Task OnInitializedAsync() Returns Task A Task representing any asynchronous operation. OnParametersSetAsync() Method invoked when the component has received parameters from its parent in the render tree, and the incoming values have been assigned to properties. protected override Task OnParametersSetAsync() Returns Task A Task representing any asynchronous operation."
  },
  "api/BlazorApp.Components.HelperComps.QuestionnaireListbox-1.html": {
    "href": "api/BlazorApp.Components.HelperComps.QuestionnaireListbox-1.html",
    "title": "Class QuestionnaireListbox<TItem> | Docu",
    "keywords": "Class QuestionnaireListbox<TItem> Namespace BlazorApp.Components.HelperComps Assembly BlazorApp.dll public class QuestionnaireListbox<TItem> : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender where TItem : class, IQuestionnaire, new() Type Parameters TItem Inheritance object ComponentBase QuestionnaireListbox<TItem> Implements IComponent IHandleEvent IHandleAfterRender Inherited Members ComponentBase.OnInitialized() ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSet() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Parent [Parameter] public IQuestionnaire? Parent { get; set; } Property Value IQuestionnaire SelectedItem [Parameter] public TItem? SelectedItem { get; set; } Property Value TItem SelectedItemChanged [Parameter] public EventCallback<TItem> SelectedItemChanged { get; set; } Property Value EventCallback<TItem> Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder OnParametersSetAsync() Method invoked when the component has received parameters from its parent in the render tree, and the incoming values have been assigned to properties. protected override Task OnParametersSetAsync() Returns Task A Task representing any asynchronous operation."
  },
  "api/BlazorApp.Components.HelperComps.html": {
    "href": "api/BlazorApp.Components.HelperComps.html",
    "title": "Namespace BlazorApp.Components.HelperComps | Docu",
    "keywords": "Namespace BlazorApp.Components.HelperComps Classes DeleteDialog EditDialog GameTopicArea GamingArea OnlineArea OnlineArea.NewMessage QuestionnaireListbox<TItem>"
  },
  "api/BlazorApp.Components.Layout.MainLayout.html": {
    "href": "api/BlazorApp.Components.Layout.MainLayout.html",
    "title": "Class MainLayout | Docu",
    "keywords": "Class MainLayout Namespace BlazorApp.Components.Layout Assembly BlazorApp.dll public class MainLayout : LayoutComponentBase, IComponent, IHandleEvent, IHandleAfterRender Inheritance object ComponentBase LayoutComponentBase MainLayout Implements IComponent IHandleEvent IHandleAfterRender Inherited Members LayoutComponentBase.SetParametersAsync(ParameterView) LayoutComponentBase.Body ComponentBase.OnInitialized() ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder"
  },
  "api/BlazorApp.Components.Layout.NavMenu.html": {
    "href": "api/BlazorApp.Components.Layout.NavMenu.html",
    "title": "Class NavMenu | Docu",
    "keywords": "Class NavMenu Namespace BlazorApp.Components.Layout Assembly BlazorApp.dll public class NavMenu : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender, IDisposable Inheritance object ComponentBase NavMenu Implements IComponent IHandleEvent IHandleAfterRender IDisposable Inherited Members ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose() OnInitialized() Method invoked when the component is ready to start, having received its initial parameters from its parent in the render tree. protected override void OnInitialized()"
  },
  "api/BlazorApp.Components.Layout.html": {
    "href": "api/BlazorApp.Components.Layout.html",
    "title": "Namespace BlazorApp.Components.Layout | Docu",
    "keywords": "Namespace BlazorApp.Components.Layout Classes MainLayout NavMenu"
  },
  "api/BlazorApp.Components.Pages.Dashboard.html": {
    "href": "api/BlazorApp.Components.Pages.Dashboard.html",
    "title": "Class Dashboard | Docu",
    "keywords": "Class Dashboard Namespace BlazorApp.Components.Pages Assembly BlazorApp.dll [Authorize] [Route(\"/dashboard/\")] public class Dashboard : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Inheritance object ComponentBase Dashboard Implements IComponent IHandleEvent IHandleAfterRender Inherited Members ComponentBase.OnInitialized() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder OnInitializedAsync() Method invoked when the component is ready to start, having received its initial parameters from its parent in the render tree. Override this method if you will perform an asynchronous operation and want the component to refresh when that operation is completed. protected override Task OnInitializedAsync() Returns Task A Task representing any asynchronous operation."
  },
  "api/BlazorApp.Components.Pages.Docu.html": {
    "href": "api/BlazorApp.Components.Pages.Docu.html",
    "title": "Class Docu | Docu",
    "keywords": "Class Docu Namespace BlazorApp.Components.Pages Assembly BlazorApp.dll [Route(\"/documentation/\")] public class Docu : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Inheritance object ComponentBase Docu Implements IComponent IHandleEvent IHandleAfterRender Inherited Members ComponentBase.OnInitialized() ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder"
  },
  "api/BlazorApp.Components.Pages.Error.html": {
    "href": "api/BlazorApp.Components.Pages.Error.html",
    "title": "Class Error | Docu",
    "keywords": "Class Error Namespace BlazorApp.Components.Pages Assembly BlazorApp.dll [Route(\"/Error\")] public class Error : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Inheritance object ComponentBase Error Implements IComponent IHandleEvent IHandleAfterRender Inherited Members ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder OnInitialized() Method invoked when the component is ready to start, having received its initial parameters from its parent in the render tree. protected override void OnInitialized()"
  },
  "api/BlazorApp.Components.Pages.HowTo.html": {
    "href": "api/BlazorApp.Components.Pages.HowTo.html",
    "title": "Class HowTo | Docu",
    "keywords": "Class HowTo Namespace BlazorApp.Components.Pages Assembly BlazorApp.dll [Route(\"/how-to/\")] public class HowTo : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Inheritance object ComponentBase HowTo Implements IComponent IHandleEvent IHandleAfterRender Inherited Members ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder OnInitialized() Method invoked when the component is ready to start, having received its initial parameters from its parent in the render tree. protected override void OnInitialized()"
  },
  "api/BlazorApp.Components.Pages.Questionnaires.html": {
    "href": "api/BlazorApp.Components.Pages.Questionnaires.html",
    "title": "Class Questionnaires | Docu",
    "keywords": "Class Questionnaires Namespace BlazorApp.Components.Pages Assembly BlazorApp.dll [Authorize] [Route(\"/questionnaires\")] public class Questionnaires : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Inheritance object ComponentBase Questionnaires Implements IComponent IHandleEvent IHandleAfterRender Inherited Members ComponentBase.OnInitialized() ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder"
  },
  "api/BlazorApp.Components.Pages.QuizGame.html": {
    "href": "api/BlazorApp.Components.Pages.QuizGame.html",
    "title": "Class QuizGame | Docu",
    "keywords": "Class QuizGame Namespace BlazorApp.Components.Pages Assembly BlazorApp.dll [Route(\"/\")] public class QuizGame : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Inheritance object ComponentBase QuizGame Implements IComponent IHandleEvent IHandleAfterRender Inherited Members ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder OnInitialized() Method invoked when the component is ready to start, having received its initial parameters from its parent in the render tree. protected override void OnInitialized()"
  },
  "api/BlazorApp.Components.Pages.html": {
    "href": "api/BlazorApp.Components.Pages.html",
    "title": "Namespace BlazorApp.Components.Pages | Docu",
    "keywords": "Namespace BlazorApp.Components.Pages Classes Dashboard Docu Error HowTo Questionnaires QuizGame"
  },
  "api/BlazorApp.Components.Routes.html": {
    "href": "api/BlazorApp.Components.Routes.html",
    "title": "Class Routes | Docu",
    "keywords": "Class Routes Namespace BlazorApp.Components Assembly BlazorApp.dll public class Routes : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Inheritance object ComponentBase Routes Implements IComponent IHandleEvent IHandleAfterRender Inherited Members ComponentBase.OnInitialized() ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder"
  },
  "api/BlazorApp.Components._Imports.html": {
    "href": "api/BlazorApp.Components._Imports.html",
    "title": "Class _Imports | Docu",
    "keywords": "Class _Imports Namespace BlazorApp.Components Assembly BlazorApp.dll public class _Imports : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Inheritance object ComponentBase _Imports Implements IComponent IHandleEvent IHandleAfterRender Inherited Members ComponentBase.OnInitialized() ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder"
  },
  "api/BlazorApp.Components.html": {
    "href": "api/BlazorApp.Components.html",
    "title": "Namespace BlazorApp.Components | Docu",
    "keywords": "Namespace BlazorApp.Components Classes App Routes _Imports"
  },
  "api/BlazorApp.Hub.SignalRGameService.html": {
    "href": "api/BlazorApp.Hub.SignalRGameService.html",
    "title": "Class SignalRGameService | Docu",
    "keywords": "Class SignalRGameService Namespace BlazorApp.Hub Assembly BlazorApp.dll public class SignalRGameService : IAsyncDisposable Inheritance object SignalRGameService Implements IAsyncDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors SignalRGameService(IDataService, IHubContext<SignlalRHub>) Initializes a new instance of the SignalRGameService class. public SignalRGameService(IDataService dataService, IHubContext<SignlalRHub> hubContext) Parameters dataService IDataService The data service. hubContext IHubContext<SignlalRHub> The hub context. Properties GameStarted public bool GameStarted { get; } Property Value bool OnDispose Disposes the game service. public Action? OnDispose { get; set; } Property Value Action Methods DisposeAsync() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources asynchronously. public ValueTask DisposeAsync() Returns ValueTask A task that represents the asynchronous dispose operation. EndGame() Ends the game. public Task EndGame() Returns Task RemovePlayer(PlayerModel?) Removes a player from the game. public void RemovePlayer(PlayerModel? player) Parameters player PlayerModel The player to remove. SendGameStarted(List<PlayerModel?>) public Task SendGameStarted(List<PlayerModel?> players) Parameters players List<PlayerModel> Returns Task StartGame(List<PlayerModel?>, string?) Starts the game with the given players and room ID. public Task StartGame(List<PlayerModel?> players, string? roomId) Parameters players List<PlayerModel> The players to start the game with. roomId string The room ID. Returns Task UpdateSelectedAnswer(PlayerModel?) Updates the selected answer of a player. public void UpdateSelectedAnswer(PlayerModel? player) Parameters player PlayerModel The player who selected the answer."
  },
  "api/BlazorApp.Hub.SignalRGameServiceProvider.html": {
    "href": "api/BlazorApp.Hub.SignalRGameServiceProvider.html",
    "title": "Class SignalRGameServiceProvider | Docu",
    "keywords": "Class SignalRGameServiceProvider Namespace BlazorApp.Hub Assembly BlazorApp.dll public class SignalRGameServiceProvider Inheritance object SignalRGameServiceProvider Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors SignalRGameServiceProvider(IServiceProvider) public SignalRGameServiceProvider(IServiceProvider serviceProvider) Parameters serviceProvider IServiceProvider Methods GetGameService(string?) public (SignalRGameService GameService, bool GameStarted) GetGameService(string? roomId) Parameters roomId string Returns (SignalRGameService GameService, bool GameStarted)"
  },
  "api/BlazorApp.Hub.SignlalRHub.html": {
    "href": "api/BlazorApp.Hub.SignlalRHub.html",
    "title": "Class SignlalRHub | Docu",
    "keywords": "Class SignlalRHub Namespace BlazorApp.Hub Assembly BlazorApp.dll Provides methods for managing the SignalR hub. public class SignlalRHub : Hub, IDisposable Inheritance object Hub SignlalRHub Implements IDisposable Inherited Members Hub.Dispose(bool) Hub.Dispose() Hub.Clients Hub.Context Hub.Groups object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors SignlalRHub(SignalRGameServiceProvider) public SignlalRHub(SignalRGameServiceProvider gameServiceProvider) Parameters gameServiceProvider SignalRGameServiceProvider Fields HubUrl public const string HubUrl = \"/gaminghub\" Field Value string Methods GetConnectedUsers() Gets the connected users. public List<PlayerModel?> GetConnectedUsers() Returns List<PlayerModel> A list of connected users. LeaveGroup(PlayerModel?) Removes the player from the group and stop the game if the player is the last one in the group. public Task LeaveGroup(PlayerModel? player) Parameters player PlayerModel The player to remove from the group. Returns Task OnConnectedAsync() Handles the event when a connection is established. public override Task OnConnectedAsync() Returns Task OnDisconnectedAsync(Exception?) Handles the event when a connection is disconnected. public override Task OnDisconnectedAsync(Exception? e) Parameters e Exception The exception that caused the disconnection, if any. Returns Task RemovePlayer(PlayerModel?, string) Removes a player from the game. public Task RemovePlayer(PlayerModel? player, string roomId) Parameters player PlayerModel The player to remove. roomId string The room ID. Returns Task SendToGroup(PlayerModel, string, string) Sends a message to the group. public Task SendToGroup(PlayerModel player, string message, string roomId) Parameters player PlayerModel The player sending the message. message string The message to send. roomId string The room ID. Returns Task StartSinglePlayerGame(PlayerModel?, string?) Starts a single player game. public Task StartSinglePlayerGame(PlayerModel? player, string? roomId) Parameters player PlayerModel The player starting the game. roomId string The room ID. Returns Task StopGame(string, bool) Stops the game. public Task StopGame(string roomId, bool singleMode) Parameters roomId string The room ID. singleMode bool Indicates whether the game is in single player mode. Returns Task UpdateGame(GameModel, string) Updates the game state. public Task UpdateGame(GameModel game, string roomId) Parameters game GameModel The updated game state. roomId string The room ID. Returns Task UpdateGroup(PlayerModel?) Updates the group of the player and starts the game if there are enough players in the group. public Task UpdateGroup(PlayerModel? player) Parameters player PlayerModel The player to update. Returns Task UpdateSelectedAnswer(PlayerModel) Updates the selected answer of a player. public void UpdateSelectedAnswer(PlayerModel player) Parameters player PlayerModel The player who selected the answer."
  },
  "api/BlazorApp.Hub.html": {
    "href": "api/BlazorApp.Hub.html",
    "title": "Namespace BlazorApp.Hub | Docu",
    "keywords": "Namespace BlazorApp.Hub Classes SignalRGameService SignalRGameServiceProvider SignlalRHub Provides methods for managing the SignalR hub."
  },
  "api/BlazorApp.Services.OnlineSerive.html": {
    "href": "api/BlazorApp.Services.OnlineSerive.html",
    "title": "Class OnlineSerive | Docu",
    "keywords": "Class OnlineSerive Namespace BlazorApp.Services Assembly BlazorApp.dll public class OnlineSerive : IAsyncDisposable Inheritance object OnlineSerive Implements IAsyncDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors OnlineSerive(NavigationManager, AuthenticationStateProvider) public OnlineSerive(NavigationManager navigationManager, AuthenticationStateProvider authenticationStateProvider) Parameters navigationManager NavigationManager authenticationStateProvider AuthenticationStateProvider Properties HubConnection public HubConnection? HubConnection { get; set; } Property Value HubConnection Methods ConnectAsync(PlayerModel) Connects the player to the hub. public Task ConnectAsync(PlayerModel player) Parameters player PlayerModel The player to connect. Returns Task DisconnectAsync() Disconnects the player from the hub. public Task DisconnectAsync() Returns Task DisposeAsync() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources asynchronously. public ValueTask DisposeAsync() Returns ValueTask A task that represents the asynchronous dispose operation. SendMessageAsync(string, string?) Sends a message to the group. public Task SendMessageAsync(string message, string? roomId) Parameters message string The message to send. roomId string The room ID. Returns Task SendSelectedAnswerAsync(PlayerModel?) Sends the selected answer of the player. public Task SendSelectedAnswerAsync(PlayerModel? player) Parameters player PlayerModel The player who selected the answer. Returns Task UpdateGroupAsync(PlayerModel?, string?) Updates the group of the player. public Task UpdateGroupAsync(PlayerModel? player, string? newRoomId) Parameters player PlayerModel The player to update. newRoomId string The new room ID. Returns Task Events ConnectionStateChanged public event Action<HubConnectionState, HubConnectionState> ConnectionStateChanged Event Type Action<HubConnectionState, HubConnectionState>"
  },
  "api/BlazorApp.Services.html": {
    "href": "api/BlazorApp.Services.html",
    "title": "Namespace BlazorApp.Services | Docu",
    "keywords": "Namespace BlazorApp.Services Classes OnlineSerive"
  },
  "api/DataAccess.AuthData.ApplicationDbContext.html": {
    "href": "api/DataAccess.AuthData.ApplicationDbContext.html",
    "title": "Class ApplicationDbContext | Docu",
    "keywords": "Class ApplicationDbContext Namespace DataAccess.AuthData Assembly DataAccess.dll public class ApplicationDbContext : IdentityDbContext<ApplicationUser>, IInfrastructure<IServiceProvider>, IDbContextDependencies, IDbSetCache, IDbContextPoolable, IResettableService, IDisposable, IAsyncDisposable Inheritance object DbContext IdentityUserContext<ApplicationUser, string, IdentityUserClaim<string>, IdentityUserLogin<string>, IdentityUserToken<string>> IdentityDbContext<ApplicationUser, IdentityRole, string, IdentityUserClaim<string>, IdentityUserRole<string>, IdentityUserLogin<string>, IdentityRoleClaim<string>, IdentityUserToken<string>> IdentityDbContext<ApplicationUser, IdentityRole, string> IdentityDbContext<ApplicationUser> ApplicationDbContext Implements IInfrastructure<IServiceProvider> IDbContextDependencies IDbSetCache IDbContextPoolable IResettableService IDisposable IAsyncDisposable Inherited Members IdentityDbContext<ApplicationUser, IdentityRole, string, IdentityUserClaim<string>, IdentityUserRole<string>, IdentityUserLogin<string>, IdentityRoleClaim<string>, IdentityUserToken<string>>.OnModelCreating(ModelBuilder) IdentityDbContext<ApplicationUser, IdentityRole, string, IdentityUserClaim<string>, IdentityUserRole<string>, IdentityUserLogin<string>, IdentityRoleClaim<string>, IdentityUserToken<string>>.UserRoles IdentityDbContext<ApplicationUser, IdentityRole, string, IdentityUserClaim<string>, IdentityUserRole<string>, IdentityUserLogin<string>, IdentityRoleClaim<string>, IdentityUserToken<string>>.Roles IdentityDbContext<ApplicationUser, IdentityRole, string, IdentityUserClaim<string>, IdentityUserRole<string>, IdentityUserLogin<string>, IdentityRoleClaim<string>, IdentityUserToken<string>>.RoleClaims IdentityUserContext<ApplicationUser, string, IdentityUserClaim<string>, IdentityUserLogin<string>, IdentityUserToken<string>>.OnModelCreating(ModelBuilder) IdentityUserContext<ApplicationUser, string, IdentityUserClaim<string>, IdentityUserLogin<string>, IdentityUserToken<string>>.Users IdentityUserContext<ApplicationUser, string, IdentityUserClaim<string>, IdentityUserLogin<string>, IdentityUserToken<string>>.UserClaims IdentityUserContext<ApplicationUser, string, IdentityUserClaim<string>, IdentityUserLogin<string>, IdentityUserToken<string>>.UserLogins IdentityUserContext<ApplicationUser, string, IdentityUserClaim<string>, IdentityUserLogin<string>, IdentityUserToken<string>>.UserTokens IdentityUserContext<ApplicationUser, string, IdentityUserClaim<string>, IdentityUserLogin<string>, IdentityUserToken<string>>.SchemaVersion DbContext.Set<TEntity>() DbContext.Set<TEntity>(string) DbContext.OnConfiguring(DbContextOptionsBuilder) DbContext.ConfigureConventions(ModelConfigurationBuilder) DbContext.OnModelCreating(ModelBuilder) DbContext.SaveChanges() DbContext.SaveChanges(bool) DbContext.SaveChangesAsync(CancellationToken) DbContext.SaveChangesAsync(bool, CancellationToken) DbContext.Dispose() DbContext.DisposeAsync() DbContext.Entry<TEntity>(TEntity) DbContext.Entry(object) DbContext.Add<TEntity>(TEntity) DbContext.AddAsync<TEntity>(TEntity, CancellationToken) DbContext.Attach<TEntity>(TEntity) DbContext.Update<TEntity>(TEntity) DbContext.Remove<TEntity>(TEntity) DbContext.Add(object) DbContext.AddAsync(object, CancellationToken) DbContext.Attach(object) DbContext.Update(object) DbContext.Remove(object) DbContext.AddRange(params object[]) DbContext.AddRangeAsync(params object[]) DbContext.AttachRange(params object[]) DbContext.UpdateRange(params object[]) DbContext.RemoveRange(params object[]) DbContext.AddRange(IEnumerable<object>) DbContext.AddRangeAsync(IEnumerable<object>, CancellationToken) DbContext.AttachRange(IEnumerable<object>) DbContext.UpdateRange(IEnumerable<object>) DbContext.RemoveRange(IEnumerable<object>) DbContext.Find(Type, params object[]) DbContext.FindAsync(Type, params object[]) DbContext.FindAsync(Type, object[], CancellationToken) DbContext.Find<TEntity>(params object[]) DbContext.FindAsync<TEntity>(params object[]) DbContext.FindAsync<TEntity>(object[], CancellationToken) DbContext.FromExpression<TResult>(Expression<Func<IQueryable<TResult>>>) DbContext.Database DbContext.ChangeTracker DbContext.Model DbContext.ContextId DbContext.SavingChanges DbContext.SavedChanges DbContext.SaveChangesFailed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ApplicationDbContext(DbContextOptions<ApplicationDbContext>) public ApplicationDbContext(DbContextOptions<ApplicationDbContext> options) Parameters options DbContextOptions<ApplicationDbContext>"
  },
  "api/DataAccess.AuthData.ApplicationUser.html": {
    "href": "api/DataAccess.AuthData.ApplicationUser.html",
    "title": "Class ApplicationUser | Docu",
    "keywords": "Class ApplicationUser Namespace DataAccess.AuthData Assembly DataAccess.dll public class ApplicationUser : IdentityUser Inheritance object IdentityUser<string> IdentityUser ApplicationUser Inherited Members IdentityUser<string>.ToString() IdentityUser<string>.Id IdentityUser<string>.UserName IdentityUser<string>.NormalizedUserName IdentityUser<string>.Email IdentityUser<string>.NormalizedEmail IdentityUser<string>.EmailConfirmed IdentityUser<string>.PasswordHash IdentityUser<string>.SecurityStamp IdentityUser<string>.ConcurrencyStamp IdentityUser<string>.PhoneNumber IdentityUser<string>.PhoneNumberConfirmed IdentityUser<string>.TwoFactorEnabled IdentityUser<string>.LockoutEnd IdentityUser<string>.LockoutEnabled IdentityUser<string>.AccessFailedCount object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object)"
  },
  "api/DataAccess.AuthData.Migrations.CreateIdentitySchema.html": {
    "href": "api/DataAccess.AuthData.Migrations.CreateIdentitySchema.html",
    "title": "Class CreateIdentitySchema | Docu",
    "keywords": "Class CreateIdentitySchema Namespace DataAccess.AuthData.Migrations Assembly DataAccess.dll A base class inherited by each EF Core migration. public class CreateIdentitySchema : Migration Inheritance object Migration CreateIdentitySchema Inherited Members Migration.InitialDatabase Migration.BuildTargetModel(ModelBuilder) Migration.TargetModel Migration.UpOperations Migration.DownOperations Migration.ActiveProvider object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See Database migrations for more information and examples. Methods Down(MigrationBuilder) Builds the operations that will migrate the database 'down'. protected override void Down(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by this migration so that it returns to the state that it was in before this migration was applied. This method must be overridden in each class that inherits from Migration if both 'up' and 'down' migrations are to be supported. If it is not overridden, then calling it will throw and it will not be possible to migrate in the 'down' direction. See Database migrations for more information and examples. Up(MigrationBuilder) Builds the operations that will migrate the database 'up'. protected override void Up(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by the previous migration so that it is up-to-date with regard to this migration. This method must be overridden in each class that inherits from Migration. See Database migrations for more information and examples."
  },
  "api/DataAccess.AuthData.Migrations.html": {
    "href": "api/DataAccess.AuthData.Migrations.html",
    "title": "Namespace DataAccess.AuthData.Migrations | Docu",
    "keywords": "Namespace DataAccess.AuthData.Migrations Classes CreateIdentitySchema A base class inherited by each EF Core migration."
  },
  "api/DataAccess.AuthData.html": {
    "href": "api/DataAccess.AuthData.html",
    "title": "Namespace DataAccess.AuthData | Docu",
    "keywords": "Namespace DataAccess.AuthData Classes ApplicationDbContext ApplicationUser"
  },
  "api/DataAccess.DataService.html": {
    "href": "api/DataAccess.DataService.html",
    "title": "Class DataService | Docu",
    "keywords": "Class DataService Namespace DataAccess Assembly DataAccess.dll public class DataService : IDataService Inheritance object DataService Implements IDataService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DataService(QuizDbContext) public DataService(QuizDbContext context) Parameters context QuizDbContext Methods AddAnswersToQuestionAsync(int, AnswerModel?) Adds an answer to a specific question asynchronously. public Task AddAnswersToQuestionAsync(int questionId, AnswerModel? answer) Parameters questionId int The ID of the question. answer AnswerModel The answer to add. Returns Task AddQuestionToTopic(int, QuestionModel?) Adds a question to a specific topic asynchronously. public Task AddQuestionToTopic(int topicId, QuestionModel? question) Parameters topicId int The ID of the topic. question QuestionModel The question to add. Returns Task AddTopicAsync(TopicModel?) Adds a new topic asynchronously. public Task AddTopicAsync(TopicModel? topic) Parameters topic TopicModel The topic to add. Returns Task GetAnswersByQuestionAsync(int) Retrieves all answers for a specific question asynchronously. public Task<IEnumerable<AnswerModel?>> GetAnswersByQuestionAsync(int questionId) Parameters questionId int The ID of the question. Returns Task<IEnumerable<AnswerModel>> A collection of answers. GetDashBoardByUserAsync(string?) Retrieves the dashboard for a specific user asynchronously. public Task<List<DashboardModel?>> GetDashBoardByUserAsync(string? userId) Parameters userId string The ID of the user. Returns Task<List<DashboardModel>> A list of dashboard models for the user. GetQuestionsByTopicAsync(int) Retrieves all questions for a specific topic asynchronously. public Task<IEnumerable<QuestionModel?>> GetQuestionsByTopicAsync(int topicId) Parameters topicId int The ID of the topic. Returns Task<IEnumerable<QuestionModel>> A collection of questions. GetQuizByTopicIdAsync(int) Retrieves a quiz by topic ID asynchronously. public Task<List<QuestionModel>> GetQuizByTopicIdAsync(int topicId) Parameters topicId int The ID of the topic. Returns Task<List<QuestionModel>> A list of questions for the quiz. GetTopicByQuestionId(int) Retrieves a topic by question ID asynchronously. public Task<TopicModel?> GetTopicByQuestionId(int questionId) Parameters questionId int The ID of the question. Returns Task<TopicModel> The topic of the question. GetTopicsAsync() Retrieves all topics asynchronously. public Task<IEnumerable<TopicModel?>> GetTopicsAsync() Returns Task<IEnumerable<TopicModel>> A collection of topics. SetAnswerArchivedAsync(int) Sets a specific answer as archived asynchronously. public Task SetAnswerArchivedAsync(int answerId) Parameters answerId int The ID of the answer. Returns Task SetQuestionArchivedAsync(int) Sets a specific question as archived asynchronously. public Task SetQuestionArchivedAsync(int questionId) Parameters questionId int The ID of the question. Returns Task SetTopicArchivedAsync(int) Sets a specific topic as archived asynchronously. public Task SetTopicArchivedAsync(int topicId) Parameters topicId int The ID of the topic. Returns Task UpdateAnswerAsync(AnswerModel?) Updates a specific answer asynchronously. public Task UpdateAnswerAsync(AnswerModel? answer) Parameters answer AnswerModel The updated answer. Returns Task UpdateCorrectAnswer(int) Updates the correct answer for a question asynchronously. public Task UpdateCorrectAnswer(int answerId) Parameters answerId int The ID of the answer. Returns Task UpdateQuestionAsync(QuestionModel?) Updates a specific question asynchronously. public Task UpdateQuestionAsync(QuestionModel? question) Parameters question QuestionModel The updated question. Returns Task UpdateTopicAsync(TopicModel?) Updates a specific topic asynchronously. public Task UpdateTopicAsync(TopicModel? topic) Parameters topic TopicModel The updated topic. Returns Task UpdateUserDashboardAsync(string, int, bool) Updates the user's dashboard asynchronously. public Task UpdateUserDashboardAsync(string userId, int questionId, bool correctAnswer) Parameters userId string The ID of the user. questionId int The ID of the question. correctAnswer bool Whether the answer was correct. Returns Task"
  },
  "api/DataAccess.IDataService.html": {
    "href": "api/DataAccess.IDataService.html",
    "title": "Interface IDataService | Docu",
    "keywords": "Interface IDataService Namespace DataAccess Assembly DataAccess.dll Interface for the data service, providing methods for interacting with quiz data. public interface IDataService Methods AddAnswersToQuestionAsync(int, AnswerModel?) Adds an answer to a specific question asynchronously. Task AddAnswersToQuestionAsync(int questionId, AnswerModel? answer) Parameters questionId int The ID of the question. answer AnswerModel The answer to add. Returns Task AddQuestionToTopic(int, QuestionModel?) Adds a question to a specific topic asynchronously. Task AddQuestionToTopic(int topicId, QuestionModel? question) Parameters topicId int The ID of the topic. question QuestionModel The question to add. Returns Task AddTopicAsync(TopicModel?) Adds a new topic asynchronously. Task AddTopicAsync(TopicModel? topic) Parameters topic TopicModel The topic to add. Returns Task GetAnswersByQuestionAsync(int) Retrieves all answers for a specific question asynchronously. Task<IEnumerable<AnswerModel?>> GetAnswersByQuestionAsync(int questionId) Parameters questionId int The ID of the question. Returns Task<IEnumerable<AnswerModel>> A collection of answers. GetDashBoardByUserAsync(string?) Retrieves the dashboard for a specific user asynchronously. Task<List<DashboardModel?>> GetDashBoardByUserAsync(string? userId) Parameters userId string The ID of the user. Returns Task<List<DashboardModel>> A list of dashboard models for the user. GetQuestionsByTopicAsync(int) Retrieves all questions for a specific topic asynchronously. Task<IEnumerable<QuestionModel?>> GetQuestionsByTopicAsync(int topicId) Parameters topicId int The ID of the topic. Returns Task<IEnumerable<QuestionModel>> A collection of questions. GetQuizByTopicIdAsync(int) Retrieves a quiz by topic ID asynchronously. Task<List<QuestionModel>> GetQuizByTopicIdAsync(int topicId) Parameters topicId int The ID of the topic. Returns Task<List<QuestionModel>> A list of questions for the quiz. GetTopicByQuestionId(int) Retrieves a topic by question ID asynchronously. Task<TopicModel?> GetTopicByQuestionId(int questionId) Parameters questionId int The ID of the question. Returns Task<TopicModel> The topic of the question. GetTopicsAsync() Retrieves all topics asynchronously. Task<IEnumerable<TopicModel?>> GetTopicsAsync() Returns Task<IEnumerable<TopicModel>> A collection of topics. SetAnswerArchivedAsync(int) Sets a specific answer as archived asynchronously. Task SetAnswerArchivedAsync(int answerId) Parameters answerId int The ID of the answer. Returns Task SetQuestionArchivedAsync(int) Sets a specific question as archived asynchronously. Task SetQuestionArchivedAsync(int questionId) Parameters questionId int The ID of the question. Returns Task SetTopicArchivedAsync(int) Sets a specific topic as archived asynchronously. Task SetTopicArchivedAsync(int topicId) Parameters topicId int The ID of the topic. Returns Task UpdateAnswerAsync(AnswerModel?) Updates a specific answer asynchronously. Task UpdateAnswerAsync(AnswerModel? answer) Parameters answer AnswerModel The updated answer. Returns Task UpdateCorrectAnswer(int) Updates the correct answer for a question asynchronously. Task UpdateCorrectAnswer(int answerId) Parameters answerId int The ID of the answer. Returns Task UpdateQuestionAsync(QuestionModel?) Updates a specific question asynchronously. Task UpdateQuestionAsync(QuestionModel? question) Parameters question QuestionModel The updated question. Returns Task UpdateTopicAsync(TopicModel?) Updates a specific topic asynchronously. Task UpdateTopicAsync(TopicModel? topic) Parameters topic TopicModel The updated topic. Returns Task UpdateUserDashboardAsync(string, int, bool) Updates the user's dashboard asynchronously. Task UpdateUserDashboardAsync(string userId, int questionId, bool correctAnswer) Parameters userId string The ID of the user. questionId int The ID of the question. correctAnswer bool Whether the answer was correct. Returns Task"
  },
  "api/DataAccess.QuizDbContext.html": {
    "href": "api/DataAccess.QuizDbContext.html",
    "title": "Class QuizDbContext | Docu",
    "keywords": "Class QuizDbContext Namespace DataAccess Assembly DataAccess.dll public class QuizDbContext : DbContext, IInfrastructure<IServiceProvider>, IDbContextDependencies, IDbSetCache, IDbContextPoolable, IResettableService, IDisposable, IAsyncDisposable Inheritance object DbContext QuizDbContext Implements IInfrastructure<IServiceProvider> IDbContextDependencies IDbSetCache IDbContextPoolable IResettableService IDisposable IAsyncDisposable Inherited Members DbContext.Set<TEntity>() DbContext.Set<TEntity>(string) DbContext.OnConfiguring(DbContextOptionsBuilder) DbContext.ConfigureConventions(ModelConfigurationBuilder) DbContext.SaveChanges() DbContext.SaveChanges(bool) DbContext.SaveChangesAsync(CancellationToken) DbContext.SaveChangesAsync(bool, CancellationToken) DbContext.Dispose() DbContext.DisposeAsync() DbContext.Entry<TEntity>(TEntity) DbContext.Entry(object) DbContext.Add<TEntity>(TEntity) DbContext.AddAsync<TEntity>(TEntity, CancellationToken) DbContext.Attach<TEntity>(TEntity) DbContext.Update<TEntity>(TEntity) DbContext.Remove<TEntity>(TEntity) DbContext.Add(object) DbContext.AddAsync(object, CancellationToken) DbContext.Attach(object) DbContext.Update(object) DbContext.Remove(object) DbContext.AddRange(params object[]) DbContext.AddRangeAsync(params object[]) DbContext.AttachRange(params object[]) DbContext.UpdateRange(params object[]) DbContext.RemoveRange(params object[]) DbContext.AddRange(IEnumerable<object>) DbContext.AddRangeAsync(IEnumerable<object>, CancellationToken) DbContext.AttachRange(IEnumerable<object>) DbContext.UpdateRange(IEnumerable<object>) DbContext.RemoveRange(IEnumerable<object>) DbContext.Find(Type, params object[]) DbContext.FindAsync(Type, params object[]) DbContext.FindAsync(Type, object[], CancellationToken) DbContext.Find<TEntity>(params object[]) DbContext.FindAsync<TEntity>(params object[]) DbContext.FindAsync<TEntity>(object[], CancellationToken) DbContext.FromExpression<TResult>(Expression<Func<IQueryable<TResult>>>) DbContext.Database DbContext.ChangeTracker DbContext.Model DbContext.ContextId DbContext.SavingChanges DbContext.SavedChanges DbContext.SaveChangesFailed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors QuizDbContext(DbContextOptions) public QuizDbContext(DbContextOptions options) Parameters options DbContextOptions Properties Answers public DbSet<AnswerModel> Answers { get; set; } Property Value DbSet<AnswerModel> Dashboards public DbSet<DashboardModel> Dashboards { get; set; } Property Value DbSet<DashboardModel> Questions public DbSet<QuestionModel> Questions { get; set; } Property Value DbSet<QuestionModel> Topics public DbSet<TopicModel> Topics { get; set; } Property Value DbSet<TopicModel> Methods OnModelCreating(ModelBuilder) Override this method to further configure the model that was discovered by convention from the entity types exposed in DbSet<TEntity> properties on your derived context. The resulting model may be cached and re-used for subsequent instances of your derived context. protected override void OnModelCreating(ModelBuilder modelBuilder) Parameters modelBuilder ModelBuilder The builder being used to construct the model for this context. Databases (and other extensions) typically define extension methods on this object that allow you to configure aspects of the model that are specific to a given database. Remarks If a model is explicitly set on the options for this context (via UseModel(IModel)) then this method will not be run. However, it will still run when creating a compiled model. See Modeling entity types and relationships for more information and examples."
  },
  "api/DataAccess.Repository.BaseRepository-1.html": {
    "href": "api/DataAccess.Repository.BaseRepository-1.html",
    "title": "Class BaseRepository<T> | Docu",
    "keywords": "Class BaseRepository<T> Namespace DataAccess.Repository Assembly DataAccess.dll public class BaseRepository<T> : IBaseRepository<T> where T : class Type Parameters T Inheritance object BaseRepository<T> Implements IBaseRepository<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors BaseRepository(QuizDbContext) public BaseRepository(QuizDbContext context) Parameters context QuizDbContext Methods AddAsync(T?) Adds a new entity asynchronously. public Task AddAsync(T? entity) Parameters entity T The entity to add. Returns Task DeleteAsync(T?) Deletes an existing entity asynchronously. public Task DeleteAsync(T? entity) Parameters entity T The entity to delete. Returns Task GetAllAsync() Retrieves all entities asynchronously. public Task<IEnumerable<T?>> GetAllAsync() Returns Task<IEnumerable<T>> A collection of entities. GetByConditionAsync(Expression<Func<T?, bool>>) Retrieves entities based on a condition asynchronously. public Task<IEnumerable<T?>> GetByConditionAsync(Expression<Func<T?, bool>> expression) Parameters expression Expression<Func<T, bool>> The condition to apply. Returns Task<IEnumerable<T>> A collection of entities that satisfy the condition. GetByIdAsync(int) Retrieves an entity by its ID asynchronously. public Task<T?> GetByIdAsync(int id) Parameters id int The ID of the entity. Returns Task<T> The entity, if found; otherwise, null. UpdateAsync(T?) Updates an existing entity asynchronously. public Task UpdateAsync(T? entity) Parameters entity T The entity to update. Returns Task"
  },
  "api/DataAccess.Repository.IBaseRepository-1.html": {
    "href": "api/DataAccess.Repository.IBaseRepository-1.html",
    "title": "Interface IBaseRepository<T> | Docu",
    "keywords": "Interface IBaseRepository<T> Namespace DataAccess.Repository Assembly DataAccess.dll Defines the contract for a base repository, providing methods for interacting with data. public interface IBaseRepository<T> Type Parameters T The type of the entity. Methods AddAsync(T?) Adds a new entity asynchronously. Task AddAsync(T? entity) Parameters entity T The entity to add. Returns Task DeleteAsync(T?) Deletes an existing entity asynchronously. Task DeleteAsync(T? entity) Parameters entity T The entity to delete. Returns Task GetAllAsync() Retrieves all entities asynchronously. Task<IEnumerable<T?>> GetAllAsync() Returns Task<IEnumerable<T>> A collection of entities. GetByConditionAsync(Expression<Func<T?, bool>>) Retrieves entities based on a condition asynchronously. Task<IEnumerable<T?>> GetByConditionAsync(Expression<Func<T?, bool>> expression) Parameters expression Expression<Func<T, bool>> The condition to apply. Returns Task<IEnumerable<T>> A collection of entities that satisfy the condition. GetByIdAsync(int) Retrieves an entity by its ID asynchronously. Task<T?> GetByIdAsync(int id) Parameters id int The ID of the entity. Returns Task<T> The entity, if found; otherwise, null. UpdateAsync(T?) Updates an existing entity asynchronously. Task UpdateAsync(T? entity) Parameters entity T The entity to update. Returns Task"
  },
  "api/DataAccess.Repository.html": {
    "href": "api/DataAccess.Repository.html",
    "title": "Namespace DataAccess.Repository | Docu",
    "keywords": "Namespace DataAccess.Repository Classes BaseRepository<T> Interfaces IBaseRepository<T> Defines the contract for a base repository, providing methods for interacting with data."
  },
  "api/DataAccess.html": {
    "href": "api/DataAccess.html",
    "title": "Namespace DataAccess | Docu",
    "keywords": "Namespace DataAccess Classes DataService QuizDbContext Interfaces IDataService Interface for the data service, providing methods for interacting with quiz data."
  },
  "api/ModelsLibrary.AnswerModel.html": {
    "href": "api/ModelsLibrary.AnswerModel.html",
    "title": "Class AnswerModel | Docu",
    "keywords": "Class AnswerModel Namespace ModelsLibrary Assembly ModelsLibrary.dll public class AnswerModel : IQuestionnaire Inheritance object AnswerModel Implements IQuestionnaire Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Archived public bool Archived { get; set; } Property Value bool CorrectAnswer public bool CorrectAnswer { get; set; } Property Value bool DateCreated public DateTime DateCreated { get; set; } Property Value DateTime DownVoteCount public int DownVoteCount { get; set; } Property Value int Id [Key] public int Id { get; set; } Property Value int QuestionnaireModelId [ForeignKey(\"QuestionnaireModel\")] public int QuestionnaireModelId { get; set; } Property Value int Text [Required] [Length(2, 500)] public string? Text { get; set; } Property Value string UpVoteCount public int UpVoteCount { get; set; } Property Value int"
  },
  "api/ModelsLibrary.DashboardModel.html": {
    "href": "api/ModelsLibrary.DashboardModel.html",
    "title": "Class DashboardModel | Docu",
    "keywords": "Class DashboardModel Namespace ModelsLibrary Assembly ModelsLibrary.dll public class DashboardModel Inheritance object DashboardModel Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties CorrectAnswersCount public int CorrectAnswersCount { get; set; } Property Value int DateCreated public DateTime DateCreated { get; set; } Property Value DateTime Id [Key] public int Id { get; set; } Property Value int Question public QuestionModel? Question { get; set; } Property Value QuestionModel QuestionId public int QuestionId { get; set; } Property Value int UserId public string? UserId { get; set; } Property Value string WrongAnswersCount public int WrongAnswersCount { get; set; } Property Value int"
  },
  "api/ModelsLibrary.GameModel.html": {
    "href": "api/ModelsLibrary.GameModel.html",
    "title": "Class GameModel | Docu",
    "keywords": "Class GameModel Namespace ModelsLibrary Assembly ModelsLibrary.dll public class GameModel : INotifyPropertyChanged Inheritance object GameModel Implements INotifyPropertyChanged Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GameModel(List<PlayerModel?>) public GameModel(List<PlayerModel?> players) Parameters players List<PlayerModel> Properties CurrentQuiz public QuestionModel? CurrentQuiz { get; set; } Property Value QuestionModel GameStarted public bool GameStarted { get; set; } Property Value bool Players public List<PlayerModel?> Players { get; set; } Property Value List<PlayerModel> ProgressCurrentQuestion public int ProgressCurrentQuestion { get; set; } Property Value int Rounds public int Rounds { get; set; } Property Value int RoundsLeft public int RoundsLeft { get; set; } Property Value int SecondsToAnswer public int SecondsToAnswer { get; set; } Property Value int ShowCorrectAnswer public bool ShowCorrectAnswer { get; set; } Property Value bool ShowResult public bool ShowResult { get; set; } Property Value bool TimeLeftToAnswer public int TimeLeftToAnswer { get; set; } Property Value int Methods OnPropertyChanged(string) protected virtual void OnPropertyChanged(string propertyName) Parameters propertyName string Events PropertyChanged Occurs when a property value changes. public event PropertyChangedEventHandler? PropertyChanged Event Type PropertyChangedEventHandler"
  },
  "api/ModelsLibrary.IQuestionnaire.html": {
    "href": "api/ModelsLibrary.IQuestionnaire.html",
    "title": "Interface IQuestionnaire | Docu",
    "keywords": "Interface IQuestionnaire Namespace ModelsLibrary Assembly ModelsLibrary.dll public interface IQuestionnaire Properties Archived bool Archived { get; set; } Property Value bool DateCreated DateTime DateCreated { get; set; } Property Value DateTime Id int Id { get; set; } Property Value int Text string? Text { get; set; } Property Value string"
  },
  "api/ModelsLibrary.Message.html": {
    "href": "api/ModelsLibrary.Message.html",
    "title": "Class Message | Docu",
    "keywords": "Class Message Namespace ModelsLibrary Assembly ModelsLibrary.dll public class Message Inheritance object Message Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Message(string, string, bool) public Message(string username, string body, bool mine) Parameters username string body string mine bool Properties Body public string Body { get; set; } Property Value string CSS public string CSS { get; } Property Value string IsNotice public bool IsNotice { get; } Property Value bool Mine public bool Mine { get; set; } Property Value bool Username public string Username { get; set; } Property Value string"
  },
  "api/ModelsLibrary.PlayerModel.html": {
    "href": "api/ModelsLibrary.PlayerModel.html",
    "title": "Class PlayerModel | Docu",
    "keywords": "Class PlayerModel Namespace ModelsLibrary Assembly ModelsLibrary.dll public class PlayerModel Inheritance object PlayerModel Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ConnectionId public string? ConnectionId { get; set; } Property Value string PlayingSingleMode public bool PlayingSingleMode { get; set; } Property Value bool RoomId public string? RoomId { get; set; } Property Value string Score public int Score { get; set; } Property Value int SelectedAnswer public AnswerModel? SelectedAnswer { get; set; } Property Value AnswerModel UserId public string? UserId { get; set; } Property Value string Username [Required] [StringLength(32, MinimumLength = 3)] public string? Username { get; set; } Property Value string"
  },
  "api/ModelsLibrary.QuestionModel.html": {
    "href": "api/ModelsLibrary.QuestionModel.html",
    "title": "Class QuestionModel | Docu",
    "keywords": "Class QuestionModel Namespace ModelsLibrary Assembly ModelsLibrary.dll public class QuestionModel : IQuestionnaire Inheritance object QuestionModel Implements IQuestionnaire Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Answers public List<AnswerModel>? Answers { get; set; } Property Value List<AnswerModel> Archived public bool Archived { get; set; } Property Value bool DateCreated public DateTime DateCreated { get; set; } Property Value DateTime Id [Key] public int Id { get; set; } Property Value int Text [Required] [Length(5, 500)] public string? Text { get; set; } Property Value string TopicModelId [ForeignKey(\"TopicModel\")] public int TopicModelId { get; set; } Property Value int"
  },
  "api/ModelsLibrary.TopicModel.html": {
    "href": "api/ModelsLibrary.TopicModel.html",
    "title": "Class TopicModel | Docu",
    "keywords": "Class TopicModel Namespace ModelsLibrary Assembly ModelsLibrary.dll public class TopicModel : IQuestionnaire Inheritance object TopicModel Implements IQuestionnaire Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Archived public bool Archived { get; set; } Property Value bool DateCreated public DateTime DateCreated { get; set; } Property Value DateTime Id [Key] public int Id { get; set; } Property Value int Questions public List<QuestionModel>? Questions { get; set; } Property Value List<QuestionModel> Text [Required] [Length(5, 100)] public string? Text { get; set; } Property Value string"
  },
  "api/ModelsLibrary.html": {
    "href": "api/ModelsLibrary.html",
    "title": "Namespace ModelsLibrary | Docu",
    "keywords": "Namespace ModelsLibrary Classes AnswerModel DashboardModel GameModel Message PlayerModel QuestionModel TopicModel Interfaces IQuestionnaire"
  },
  "docs/getting-started.html": {
    "href": "docs/getting-started.html",
    "title": "Getting Started | Docu",
    "keywords": "Getting Started"
  },
  "docs/introduction.html": {
    "href": "docs/introduction.html",
    "title": "Introduction | Docu",
    "keywords": "Introduction"
  },
  "index.html": {
    "href": "index.html",
    "title": "This is the HOMEPAGE. | Docu",
    "keywords": "This is the HOMEPAGE. Refer to Markdown for how to write markdown files. Quick Start Notes: Add images to the images folder if the file is referencing an image."
  }
}